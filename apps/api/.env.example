# Database
DATABASE_URL="postgresql://admin:yourpassword@localhost:5432/aistudio555_academy?schema=public"

# Server
NODE_ENV=development
API_PORT=4000
HOST=0.0.0.0
FRONTEND_URL=http://localhost:3000

# JWT Secrets - SECURITY CRITICAL: Must be 32+ characters in production
# Generate strong secrets using: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
JWT_SECRET=your-super-secure-jwt-secret-32-characters-minimum-change-in-production
JWT_REFRESH_SECRET=your-super-secure-refresh-secret-32-characters-minimum-change-in-production
JWT_ACCESS_TOKEN_EXPIRY=15m
JWT_REFRESH_TOKEN_EXPIRY=7d

# Stripe
STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key
STRIPE_WEBHOOK_SECRET=whsec_your_stripe_webhook_secret

# PayPal
PAYPAL_CLIENT_ID=your_paypal_client_id
PAYPAL_CLIENT_SECRET=your_paypal_client_secret

# Email Service (future implementation)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your-email@gmail.com
SMTP_PASS=your-app-password

# Redis (optional - for rate limiting)
REDIS_URL=redis://localhost:6379

# File Upload (future implementation)
MAX_FILE_SIZE=5242880
UPLOAD_DIR=./uploads

# ============================================
# SECURITY CONFIGURATION
# ============================================

# Request Size Limits (security hardening)
MAX_JSON_SIZE=10mb
MAX_URL_ENCODED_SIZE=10mb

# CORS Configuration - Update for production
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001

# Rate Limiting Configuration
GENERAL_RATE_LIMIT=1000
AUTH_RATE_LIMIT=5
PASSWORD_RESET_RATE_LIMIT=3
REGISTRATION_RATE_LIMIT=5
PAYMENT_RATE_LIMIT=10

# Security Features
SECURITY_AUDIT_ENABLED=true
SUSPICIOUS_ACTIVITY_DETECTION=true

# Session Configuration
SESSION_SECRET=your-super-secure-session-secret-32-chars-minimum
SESSION_TIMEOUT=1800000

# Production Security (set these for production deployment)
# FRONTEND_URL=https://academy.aistudio555.ai
# ALLOWED_ORIGINS=https://aistudio555.ai,https://www.aistudio555.ai,https://academy.aistudio555.ai

# ============================================
# SECURITY NOTES
# ============================================
# 
# CRITICAL SECURITY REQUIREMENTS:
# 1. JWT_SECRET must be 32+ characters (use crypto.randomBytes(32).toString('hex'))
# 2. JWT_REFRESH_SECRET must be 32+ characters and different from JWT_SECRET
# 3. In production, set NODE_ENV=production
# 4. Update ALLOWED_ORIGINS with your actual domain
# 5. Use HTTPS in production (update FRONTEND_URL)
# 6. Regularly rotate JWT secrets
# 7. Monitor logs for security events
#
# Generate secure secrets:
# node -e "console.log('JWT_SECRET=' + require('crypto').randomBytes(32).toString('hex'))"
# node -e "console.log('JWT_REFRESH_SECRET=' + require('crypto').randomBytes(32).toString('hex'))"
# node -e "console.log('SESSION_SECRET=' + require('crypto').randomBytes(32).toString('hex'))"